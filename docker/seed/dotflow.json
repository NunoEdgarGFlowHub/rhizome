{"_id":{"$oid":"5bbe6169e2e290451046320b"},"dotflow":{"id":"testbot","name":"testbot","description":"Rhizome Test Bot","nodes":[{"id":"mainnode","name":"mainnode","description":"Main node","context":["global"],"paths":[{"id":"testeq","name":"testeq","description":"Test $eq function","forceRun":false,"permissions":[],"conditions":{"_eq":["$eq test",{"_input":[]}]},"responses":[{"_text":["This is $$eq test: you entered the exact phrase '$$eq test'"]}],"exceptions":[]},{"id":"image","name":"image","description":"sends an image","forceRun":false,"permissions":[],"conditions":{"_eq":["image",{"_input":[]}]},"responses":[{"_text":["Sending an image"]},{"_image":["https://i.imgur.com/6yHmlwT.jpg"]}],"exceptions":[]},{"id":"video","name":"video","description":"sends a video","forceRun":false,"permissions":[],"conditions":{"_eq":["video",{"_input":[]}]},"responses":[{"_text":["Sending a video"]},{"_video":["http://techslides.com/demos/sample-videos/small.mp4"]}],"exceptions":[]},{"id":"audio","name":"audio","description":"sends an audio","forceRun":false,"permissions":[],"conditions":{"_eq":["audio",{"_input":[]}]},"responses":[{"_text":["Sending an audio"]},{"_video":["https://www.sample-videos.com/audio/mp3/crowd-cheering.mp3"]}],"exceptions":[]},{"id":"regexmatchweather","name":"regexmatchweather","description":"regexMatch and weather test (note $weather response is a dict. we might want to return object instead?)","forceRun":false,"permissions":[],"conditions":{"_regexMatch":["^current weather in (?P\u003cweather_location\u003e[0-9a-z ]+)?$",{"_input":[]}]},"responses":[{"_text":["$$regexMatch with named group and $$weather instruction test: Current weather for $weather(weather_location, 'today')['canonicalLocation'] is $weather(weather_location, 'today')['text']"]}],"exceptions":[]},{"id":"chatscriptmatchtest","name":"chatscriptmatchtest","description":"chatscriptMatch test","forceRun":false,"permissions":[],"conditions":{"_chatscriptMatch":["chatscript test _*",{"_input":[]},["matchvarname"]]},"responses":[{"_text":["$$chatscriptMatch with match variable test: ChatScript detected a match variable with value '$matchvarname'"]}],"exceptions":[]},{"id":"buttonpb","name":"buttonpb","description":"sends postback button","forceRun":false,"permissions":[],"conditions":{"_eq":["postback buttons",{"_input":[]}]},"responses":[{"_text":["Sending buttons"]},{"_button":["idbutton1","button 1","postbackbutton1"]},{"_button":["idbutton2","button 2","postbackbutton2"]},{"_text":["Another set of buttons"]},{"_button":["idbutton3","button 3","postbackbutton3"]}],"exceptions":[]},{"id":"settest","name":"settest","description":"set test","forceRun":false,"permissions":[],"conditions":{"_regexMatch":["^set (?P\u003cvar_name\u003e[0-9a-z]+) with (?P\u003cvar_value\u003e[0-9a-z]+)$",{"_input":[]},["var_name","var_value"]]},"responses":[{"_text":["Setting variable '$var_name' with value '$var_value' .. check it with 'get \u003cvar name\u003e'"]},{"_set":[{"_get":"var_name"},{"_get":"var_value"}]}],"exceptions":[]},{"id":"gettest","name":"gettest","description":"get test (seems $ is not needed on instructions arguments)","forceRun":false,"permissions":[],"conditions":{"_regexMatch":["^get (?P\u003cvar_name\u003e[0-9a-z]+)$",{"_input":[]}]},"responses":[{"_text":["value in variable $var_name is: $get(var_name)"]}],"exceptions":[]},{"id":"conditional","name":"conditional","description":"matches only if variable 'foo' has value 'bar'","forceRun":false,"permissions":[],"conditions":{"_and":[{"_eq":["conditional",{"_input":[]}]},{"_eq":[{"_get":["foo"]},"bar"]}]},"responses":[{"_text":"Thanks! test passed. Now you can change value of fuu variable to test it again"}],"exceptions":[]},{"id":"conditional2","name":"conditional2","description":"alternate match to return true with no conditional to show text","forceRun":false,"permissions":[],"conditions":{"_eq":["conditional",{"_input":[]}]},"responses":[{"_text":"Please set variable 'foo' with value 'var' to test conditional path match. (enter 'set foo with var')"}],"exceptions":[]},{"id":"sendemail","name":"sendemail","description":"send an email","forceRun":false,"permissions":[],"conditions":{"_regexMatch":["^send email$",{"_input":[]}]},"responses":[{"_sendEmail":["botanicinc@mailinator.com","Testbot \u003ctestbot@botanic.io\u003e","This an email sent by Testbot from Botanic Inc","Hello!"]},{"_text":["email sent to testbot007@mailinator.com"]}],"exceptions":[]},{"id":"simplesentiment","name":"simplesentiment","description":"returns sentiment analysis from microsoft cognitive services","forceRun":false,"permissions":[],"conditions":{"_regexMatch":["^simple sentiment analysis (?P\u003csentiment_analisys_text\u003e.+)$",{"_input":[]}]},"responses":[{"_text":["sentiment analysis score result for '$sentiment_analisys_text' (0 bad, 1 good, .5 neutral): $simpleSentimentAnalysis(sentiment_analisys_text)"]}],"exceptions":[]},{"id":"help","name":"help","description":"provide help","forceRun":false,"permissions":[],"conditions":{"_eq":["help",{"_input":[]}]},"responses":[{"_text":["Enter any of these to test the bot: $$eq test, image, video, audio, current weather in \u003ccity\u003e, chatscript test \u003cany word\u003e, postback buttons, set \u003cvariable name\u003e \u003cvariable value\u003e, get \u003cvariable name\u003e, send email, simple sentiment analysis \u003cphrase to analyse\u003e, $$goto test, conditional"]}],"exceptions":[]},{"id":"gototest","name":"gototest","description":"this will execute $goto to the icecream yes/no node","forceRun":false,"permissions":[],"conditions":{"_eq":["$goto test",{"_input":[]}]},"responses":[{"_text":["Ok.. do you like icecreams? (I will execute $$goto to another node which context will be just expecting yes/no answer.. or you can say anything for the global context too)"]},{"_goto":"gototest"}],"exceptions":[]},{"id":"nomatch","name":"nomatch","description":"this is the no match path. capturing any entered text the bot couldn't understand. THIS HAS TO BE THE LAST PATH OF THE NODE!","forceRun":false,"permissions":[],"conditions":true,"responses":[{"_text":["Unknown instruction, please enter 'help' for asistance"]}],"exceptions":[]}]},{"id":"gototest","name":"gototest","paths":[{"id":"yes","name":"yes","description":"Answers to yes","forceRun":false,"permissions":[],"conditions":{"_eq":["no",{"_input":[]}]},"responses":[{"_text":["Yeah me nether.. too cold(?)"]}],"exceptions":[]},{"id":"no","name":"no","description":"Answers to no","forceRun":false,"permissions":[],"conditions":{"_eq":["yes",{"_input":[]}]},"responses":[{"_text":["Of course! who doesn't like icecreams!"]}],"exceptions":[]}]}]},"dotbotId":"5bbe600de2e2904510463207","createdAt":{"$date":"2018-10-02T00:12:34.958Z"},"updatedAt":{"$date":"2018-10-02T00:12:34.958Z"}}
